services:

  discovery-server:
    image: discovery-app-image
    ports:
      - "8761:8761"
    restart: always

  resource-service-db:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_RESOURCES}
    ports:
      - "7001:5432"
    restart: always
    volumes:
      - resource-service-db:/var/lib/postgresql/data

  resource-service:
    image: resource-app-image
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - RESOURCE_DB_URL=${RESOURCE_DB_URL}
      - RESOURCE_LOCALSTACK_URL=${RESOURCE_LOCALSTACK_URL}
      - RESOURCE_EUREKA_URL=${RESOURCE_EUREKA_URL}
    restart: always
    depends_on:
      - resource-service-db
      - song-service

  resource-processor:
    image: resource-processor-app-image
    deploy:
      mode: replicated
      replicas: 3
    restart: always
    environment:
      - RESOURCE_EUREKA_URL=${RESOURCE_EUREKA_URL}
      - GATEWAY_SERVICE_ID=${GATEWAY_SERVICE_ID}
    depends_on:
      - discovery-server
      - message-broker

  song-service:
    image: song-app-image
    expose:
      - "8080"
    restart: always
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - discovery-server
      - song-service-db
    environment:
      - SONG_DB_URL=${SONG_DB_URL}
      - SONG_EUREKA_URL=${SONG_EUREKA_URL}
      - SPRING_AMQP_DESERIALIZATION_TRUST_ALL=true

  localstack:
    image: localstack/localstack
    expose:
      - "4566"
    restart: always

  prometheus:
    image: prom/prometheus:v2.48.0
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  message-broker:
    image: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  gateway-service:
    image: gateway-app-image
    ports:
      - "7070:8080"
      - "5000:5000"
    environment:
      - GATEWAY_EUREKA_URL=${GATEWAY_EUREKA_URL}
    restart: always

  song-service-db:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_SONGS}
    ports:
      - "7002:5432"
    volumes:
      - song-service-db:/var/lib/postgresql/data

volumes:
  resource-service-db:
  song-service-db:
  prometheus:
